#ifndef VARIABLE_H
#define VARIABLE_H

//#include "USB.h"
//#include "USBHIDKeyboard.h"
//#include "USBMSC.h"
#include "WiFi.h"
#include "esp_now.h"


//--------------------------------------------------Define--------------------------------------------------
//----------Global values
#define MIRCOS2SECONDS 1000000

//----------GPI

//----------GPO

//----------ADC

//----------PWM

//----------LED
#define LED_DATA_PIN 9
#define LED_BUILDIN LED_DATA_PIN


//----------Peripherals
//---UART
//HardwareSerial debug = HardwareSerial(0);


//---I2C

//---SPI

//--------------------------------------------------Initialize libraries--------------------------------------------------

// USB HID object. For ESP32 these values cannot be changed after this declaration
// desc report, desc len, protocol, interval, use out endpoint
// Report ID
enum
{
  RID_3DMOUSE = 0,
  RID_KEYBOARD = 0x1b,
  RID_MOUSE,
  RID_CONSUMER_CONTROL, // Media, volume etc ..
  RID_GAMEPAD,
  
};



#define HID_REPORT_DESC_MAGELLAN \
  0x05, 0x01, 0x09, 0x08, 0xa1, 0x01, 0xa1, 0x00, 0x85, 0x01+RID_3DMOUSE, 0x16, 0xa2, 0xfe, 0x26, 0x5e, 0x01,\
  0x36, 0x88, 0xfa, 0x46, 0x78, 0x05, 0x55, 0x0c, 0x65, 0x11, 0x09, 0x30, 0x09, 0x31, 0x09, 0x32,\
  0x75, 0x10, 0x95, 0x03, 0x81, 0x06, 0xc0, 0xa1, 0x00, 0x85, 0x02+RID_3DMOUSE, 0x09, 0x33, 0x09, 0x34, 0x09,\
  0x35, 0x75, 0x10, 0x95, 0x03, 0x81, 0x06, 0xc0, 0xa1, 0x02, 0x85, 0x03+RID_3DMOUSE, 0x05, 0x01, 0x05, 0x09,\
  0x19, 0x01, 0x29, 0x02, 0x15, 0x00, 0x25, 0x01, 0x35, 0x00, 0x45, 0x01, 0x75, 0x01, 0x95, 0x02,\
  0x81, 0x02, 0x95, 0x0e, 0x81, 0x03, 0xc0, 0xa1, 0x02, 0x85, 0x04+RID_3DMOUSE, 0x05, 0x08, 0x09, 0x4b, 0x15,\
  0x00, 0x25, 0x01, 0x95, 0x01, 0x75, 0x01, 0x91, 0x02, 0x95, 0x01, 0x75, 0x07, 0x91, 0x03, 0xc0,\
  0x06, 0x00, 0xff, 0x09, 0x01, 0xa1, 0x02, 0x15, 0x80, 0x25, 0x7f, 0x75, 0x08, 0x09, 0x3a, 0xa1,\
  0x02, 0x85, 0x05+RID_3DMOUSE, 0x09, 0x20, 0x95, 0x01, 0xb1, 0x02, 0xc0, 0xa1, 0x02, 0x85, 0x06+RID_3DMOUSE, 0x09, 0x21,\
  0x95, 0x01, 0xb1, 0x02, 0xc0, 0xa1, 0x02, 0x85, 0x07+RID_3DMOUSE, 0x09, 0x22, 0x95, 0x01, 0xb1, 0x02, 0xc0,\
  0xa1, 0x02, 0x85, 0x08+RID_3DMOUSE, 0x09, 0x23, 0x95, 0x07, 0xb1, 0x02, 0xc0, 0xa1, 0x02, 0x85, 0x09 +RID_3DMOUSE, 0x09,\
  0x24, 0x95, 0x07, 0xb1, 0x02, 0xc0, 0xa1, 0x02, 0x85, 0x0a+RID_3DMOUSE, 0x09, 0x25, 0x95, 0x07, 0xb1, 0x02,\
  0xc0, 0xa1, 0x02, 0x85, 0x0b+RID_3DMOUSE, 0x09, 0x26, 0x95, 0x01, 0xb1, 0x02, 0xc0, 0xa1, 0x02, 0x85, 0x13+RID_3DMOUSE,\
  0x09, 0x2e, 0x95, 0x01, 0xb1, 0x02, 0xc0, 0xa1, 0x02, 0x85, 0x19+RID_3DMOUSE, 0x09, 0x31, 0x95, 0x04, 0xb1,\
  0x02, 0xc0, 0xa1, 0x02, 0x85, 0x1a+RID_3DMOUSE, 0x09, 0x32, 0x95, 0x07, 0xb1, 0x02, 0xc0, 0xc0, 0xc0



uint8_t const desc_hid_report[] = {
  TUD_HID_REPORT_DESC_KEYBOARD(HID_REPORT_ID(RID_KEYBOARD)),
  TUD_HID_REPORT_DESC_MOUSE(HID_REPORT_ID(RID_MOUSE)),
  TUD_HID_REPORT_DESC_CONSUMER(HID_REPORT_ID(RID_CONSUMER_CONTROL)),
  TUD_HID_REPORT_DESC_GAMEPAD(HID_REPORT_ID(RID_GAMEPAD)),
  HID_REPORT_DESC_MAGELLAN
};



// USB HID object
Adafruit_USBD_HID usb_hid;

hid_gamepad_report_t gp;

// ESP32 use same flash device that store code.
// Therefore there is no need to specify the SPI and SS
Adafruit_FlashTransport_ESP32 flashTransport;
Adafruit_SPIFlash flash(&flashTransport);

// file system object from SdFat
FatVolume fatfs;

// USB Mass Storage object
Adafruit_USBD_MSC usb_msc;

bool fs_formatted;  // Check if flash is formatted
bool fs_changed;    // Set to true when browser write to flash

File32 fsUploadFile;



//--------------------------------------------------Structs--------------------------------------------------
struct Func
{
  uint16_t counter;
  unsigned long beginTime;
  unsigned long startCounterTime;
  unsigned long endTime;
  unsigned long duration;
  const    long interval;
  uint8_t frequency;
  unsigned long inBetweenTime;
};

Func ledTask = {0, 0, 0, 0, 0, 10000, 0, 0};
Func espnowTask = {0, 0, 0, 0, 0, 1000, 0, 0};
Func keyboardTask = {0, 0, 0, 0, 0, 1000000, 0, 0};
Func uartTask = {0, 0, 0, 0, 0, 20000, 0, 0};
Func fsTask = {0, 0, 0, 0, 0, 2000000, 0, 0};
Func telemetryTask = {0, 0, 0, 0, 0, 2000000, 0, 0};



//--------------------------------------------------Variables--------------------------------------------------

uint8_t receivedData[16];

#define MAC_ADDRESS_SIZE 6

#endif