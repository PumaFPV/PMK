#ifndef CONFIG_H
#define CONFIG_H

#include "Adafruit_TinyUSB.h"

#define NUM_LEDS 29
#define MAX_NUMBER_OF_KEYBOARDS 8
#define MAX_NUMBER_OF_LAYERS 8
#define MAX_NUMBER_OF_KEYS 32
uint8_t settingLayerID = 2;

uint8_t keyChar[MAX_NUMBER_OF_KEYBOARDS][MAX_NUMBER_OF_LAYERS][MAX_NUMBER_OF_KEYS] = 
{//deviceID=0
  {
    {//Layer 0
      HID_KEY_5, HID_KEY_4, HID_KEY_3, HID_KEY_2, HID_KEY_1, HID_KEY_ESCAPE,
      HID_KEY_TAB, HID_KEY_Q, HID_KEY_W, HID_KEY_E, HID_KEY_R, HID_KEY_T,
      HID_KEY_G, HID_KEY_F, HID_KEY_D, HID_KEY_S, HID_KEY_A, HID_KEY_CAPS_LOCK,
      HID_KEY_SHIFT_LEFT, HID_KEY_Y, HID_KEY_X, HID_KEY_C, HID_KEY_V, HID_KEY_B,
      HID_KEY_SPACE, 0xF0, HID_KEY_ALT_LEFT, HID_KEY_GUI_LEFT, HID_KEY_CONTROL_LEFT,
      0, 0, 0
    },
    {//Layer 1
      HID_KEY_F6, HID_KEY_F5, HID_KEY_F4, HID_KEY_F3, HID_KEY_F2, HID_KEY_F1,
      HID_KEY_TAB, HID_KEY_1, HID_KEY_2, HID_KEY_3, HID_KEY_4, HID_KEY_5,
      HID_KEY_G, HID_KEY_F, HID_KEY_D, HID_KEY_S, HID_KEY_A, HID_KEY_CAPS_LOCK,
      HID_KEY_SHIFT_LEFT, HID_KEY_Y, HID_KEY_X, HID_KEY_C, HID_KEY_V, HID_KEY_B,
      HID_KEY_SPACE, HID_KEY_C, HID_KEY_Z, HID_KEY_ALT_LEFT, HID_KEY_CONTROL_LEFT,
      0, 0, 0
    },
    {//Layer 2
      HID_KEY_5, HID_KEY_4, HID_KEY_3, HID_KEY_2, HID_KEY_1, HID_KEY_ESCAPE,
      HID_KEY_TAB, HID_KEY_Q, HID_KEY_W, HID_KEY_E, HID_KEY_R, HID_KEY_T,
      HID_KEY_G, HID_KEY_F, HID_KEY_D, HID_KEY_S, HID_KEY_A, HID_KEY_CAPS_LOCK,
      HID_KEY_SHIFT_LEFT, HID_KEY_Y, HID_KEY_X, HID_KEY_C, HID_KEY_V, HID_KEY_B,
      HID_KEY_ENTER, 0, HID_KEY_GUI_LEFT, HID_KEY_ALT_LEFT, HID_KEY_CONTROL_LEFT,
      0, 0, 0
    },
    {//Layer 3
      HID_KEY_5, HID_KEY_4, HID_KEY_3, HID_KEY_2, HID_KEY_1, HID_KEY_ESCAPE,
      HID_KEY_TAB, HID_KEY_Q, HID_KEY_W, HID_KEY_E, HID_KEY_R, HID_KEY_T,
      HID_KEY_G, HID_KEY_F, HID_KEY_D, HID_KEY_S, HID_KEY_A, HID_KEY_CAPS_LOCK,
      HID_KEY_SHIFT_LEFT, HID_KEY_Y, HID_KEY_X, HID_KEY_C, HID_KEY_V, HID_KEY_B,
      HID_KEY_ENTER, 0, HID_KEY_GUI_LEFT, HID_KEY_ALT_LEFT, HID_KEY_CONTROL_LEFT,
      0, 0, 0
    },
    {//Layer 4
      HID_KEY_5, HID_KEY_4, HID_KEY_3, HID_KEY_2, HID_KEY_1, HID_KEY_ESCAPE,
      HID_KEY_TAB, HID_KEY_Q, HID_KEY_W, HID_KEY_E, HID_KEY_R, HID_KEY_T,
      HID_KEY_G, HID_KEY_F, HID_KEY_D, HID_KEY_S, HID_KEY_A, HID_KEY_CAPS_LOCK,
      HID_KEY_SHIFT_LEFT, HID_KEY_Y, HID_KEY_X, HID_KEY_C, HID_KEY_V, HID_KEY_B,
      HID_KEY_ENTER, 0, HID_KEY_GUI_LEFT, HID_KEY_ALT_LEFT, HID_KEY_CONTROL_LEFT,
      0, 0, 0
    },
    {//Layer 5
      HID_KEY_5, HID_KEY_4, HID_KEY_3, HID_KEY_2, HID_KEY_1, HID_KEY_ESCAPE,
      HID_KEY_TAB, HID_KEY_Q, HID_KEY_W, HID_KEY_E, HID_KEY_R, HID_KEY_T,
      HID_KEY_G, HID_KEY_F, HID_KEY_D, HID_KEY_S, HID_KEY_A, HID_KEY_CAPS_LOCK,
      HID_KEY_SHIFT_LEFT, HID_KEY_Y, HID_KEY_X, HID_KEY_C, HID_KEY_V, HID_KEY_B,
      HID_KEY_ENTER, 0, HID_KEY_GUI_LEFT, HID_KEY_ALT_LEFT, HID_KEY_CONTROL_LEFT,
      0, 0, 0
    },
    {//Layer 6
      HID_KEY_5, HID_KEY_4, HID_KEY_3, HID_KEY_2, HID_KEY_1, HID_KEY_ESCAPE,
      HID_KEY_TAB, HID_KEY_Q, HID_KEY_W, HID_KEY_E, HID_KEY_R, HID_KEY_T,
      HID_KEY_G, HID_KEY_F, HID_KEY_D, HID_KEY_S, HID_KEY_A, HID_KEY_CAPS_LOCK,
      HID_KEY_SHIFT_LEFT, HID_KEY_Y, HID_KEY_X, HID_KEY_C, HID_KEY_V, HID_KEY_B,
      HID_KEY_ENTER, 0, HID_KEY_GUI_LEFT, HID_KEY_ALT_LEFT, HID_KEY_CONTROL_LEFT,
      0, 0, 0
    },
    {//Layer 7
      HID_KEY_5, HID_KEY_4, HID_KEY_3, HID_KEY_2, HID_KEY_1, HID_KEY_ESCAPE,
      HID_KEY_TAB, HID_KEY_Q, HID_KEY_W, HID_KEY_E, HID_KEY_R, HID_KEY_T,
      HID_KEY_G, HID_KEY_F, HID_KEY_D, HID_KEY_S, HID_KEY_A, HID_KEY_CAPS_LOCK,
      HID_KEY_SHIFT_LEFT, HID_KEY_Y, HID_KEY_X, HID_KEY_C, HID_KEY_V, HID_KEY_B,
      HID_KEY_ENTER, 0, HID_KEY_GUI_LEFT, HID_KEY_ALT_LEFT, HID_KEY_CONTROL_LEFT,
      0, 0, 0
    }
  },
  { //deviceID=1
    {//Layer 0
      HID_KEY_6, HID_KEY_7, HID_KEY_8, HID_KEY_9, HID_KEY_0, HID_KEY_DELETE,
      HID_KEY_BACKSPACE, HID_KEY_P, HID_KEY_O, HID_KEY_I, HID_KEY_U, HID_KEY_Y,
      HID_KEY_H, HID_KEY_J, HID_KEY_K, HID_KEY_L, HID_KEY_VOLUME_UP, HID_KEY_VOLUME_DOWN,
      HID_KEY_SHIFT_RIGHT, HID_KEY_MINUS, HID_KEY_PERIOD, HID_KEY_COMMA, HID_KEY_M, HID_KEY_N,
      HID_KEY_ENTER, 0xF1, HID_KEY_ALT_RIGHT, HID_KEY_GUI_RIGHT, HID_KEY_CONTROL_RIGHT,
      0, 0, 0
    },
    {//Layer 1
      HID_KEY_F7, HID_KEY_F8, HID_KEY_F9, HID_KEY_F10, HID_KEY_F11, HID_KEY_F12,
      HID_KEY_BACKSPACE, HID_KEY_0, HID_KEY_9, HID_KEY_8, HID_KEY_7, HID_KEY_6,
      HID_KEY_H, HID_KEY_J, HID_KEY_K, HID_KEY_L, HID_KEY_VOLUME_UP, HID_KEY_VOLUME_DOWN,
      HID_KEY_SHIFT_RIGHT, HID_KEY_MINUS, HID_KEY_PERIOD, HID_KEY_COMMA, HID_KEY_M, HID_KEY_N,
      HID_KEY_ENTER, 0, HID_KEY_ALT_RIGHT, HID_KEY_GUI_RIGHT, HID_KEY_CONTROL_RIGHT,
      0, 0, 0
    },
    {//Layer 2
      HID_KEY_5, HID_KEY_4, HID_KEY_3, HID_KEY_2, HID_KEY_1, HID_KEY_ESCAPE,
      HID_KEY_TAB, HID_KEY_Q, HID_KEY_W, HID_KEY_E, HID_KEY_R, HID_KEY_T,
      HID_KEY_G, HID_KEY_F, HID_KEY_D, HID_KEY_S, HID_KEY_A, HID_KEY_CAPS_LOCK,
      HID_KEY_SHIFT_LEFT, HID_KEY_Y, HID_KEY_X, HID_KEY_C, HID_KEY_V, HID_KEY_B,
      HID_KEY_ENTER, 0, HID_KEY_GUI_LEFT, HID_KEY_ALT_LEFT, HID_KEY_CONTROL_LEFT,
      0, 0, 0
    },
    {//Layer 3
      HID_KEY_5, HID_KEY_4, HID_KEY_3, HID_KEY_2, HID_KEY_1, HID_KEY_ESCAPE,
      HID_KEY_TAB, HID_KEY_Q, HID_KEY_W, HID_KEY_E, HID_KEY_R, HID_KEY_T,
      HID_KEY_G, HID_KEY_F, HID_KEY_D, HID_KEY_S, HID_KEY_A, HID_KEY_CAPS_LOCK,
      HID_KEY_SHIFT_LEFT, HID_KEY_Y, HID_KEY_X, HID_KEY_C, HID_KEY_V, HID_KEY_B,
      HID_KEY_ENTER, 0, HID_KEY_GUI_LEFT, HID_KEY_ALT_LEFT, HID_KEY_CONTROL_LEFT,
      0, 0, 0
    },
    {//Layer 4
      HID_KEY_5, HID_KEY_4, HID_KEY_3, HID_KEY_2, HID_KEY_1, HID_KEY_ESCAPE,
      HID_KEY_TAB, HID_KEY_Q, HID_KEY_W, HID_KEY_E, HID_KEY_R, HID_KEY_T,
      HID_KEY_G, HID_KEY_F, HID_KEY_D, HID_KEY_S, HID_KEY_A, HID_KEY_CAPS_LOCK,
      HID_KEY_SHIFT_LEFT, HID_KEY_Y, HID_KEY_X, HID_KEY_C, HID_KEY_V, HID_KEY_B,
      HID_KEY_ENTER, 0, HID_KEY_GUI_LEFT, HID_KEY_ALT_LEFT, HID_KEY_CONTROL_LEFT,
      0, 0, 0
    },
    {//Layer 5
      HID_KEY_5, HID_KEY_4, HID_KEY_3, HID_KEY_2, HID_KEY_1, HID_KEY_ESCAPE,
      HID_KEY_TAB, HID_KEY_Q, HID_KEY_W, HID_KEY_E, HID_KEY_R, HID_KEY_T,
      HID_KEY_G, HID_KEY_F, HID_KEY_D, HID_KEY_S, HID_KEY_A, HID_KEY_CAPS_LOCK,
      HID_KEY_SHIFT_LEFT, HID_KEY_Y, HID_KEY_X, HID_KEY_C, HID_KEY_V, HID_KEY_B,
      HID_KEY_ENTER, 0, HID_KEY_GUI_LEFT, HID_KEY_ALT_LEFT, HID_KEY_CONTROL_LEFT,
      0, 0, 0
    },
    {//Layer 6
      HID_KEY_5, HID_KEY_4, HID_KEY_3, HID_KEY_2, HID_KEY_1, HID_KEY_ESCAPE,
      HID_KEY_TAB, HID_KEY_Q, HID_KEY_W, HID_KEY_E, HID_KEY_R, HID_KEY_T,
      HID_KEY_G, HID_KEY_F, HID_KEY_D, HID_KEY_S, HID_KEY_A, HID_KEY_CAPS_LOCK,
      HID_KEY_SHIFT_LEFT, HID_KEY_Y, HID_KEY_X, HID_KEY_C, HID_KEY_V, HID_KEY_B,
      HID_KEY_ENTER, 0, HID_KEY_GUI_LEFT, HID_KEY_ALT_LEFT, HID_KEY_CONTROL_LEFT,
      0, 0, 0
    },
    {//Layer 7
      HID_KEY_5, HID_KEY_4, HID_KEY_3, HID_KEY_2, HID_KEY_1, HID_KEY_ESCAPE,
      HID_KEY_TAB, HID_KEY_Q, HID_KEY_W, HID_KEY_E, HID_KEY_R, HID_KEY_T,
      HID_KEY_G, HID_KEY_F, HID_KEY_D, HID_KEY_S, HID_KEY_A, HID_KEY_CAPS_LOCK,
      HID_KEY_SHIFT_LEFT, HID_KEY_Y, HID_KEY_X, HID_KEY_C, HID_KEY_V, HID_KEY_B,
      HID_KEY_ENTER, 0, HID_KEY_GUI_LEFT, HID_KEY_ALT_LEFT, HID_KEY_CONTROL_LEFT,
      0, 0, 0
    }
  }
};



uint32_t ledColorProfile[8][NUM_LEDS] = 
{
  {
    0x000000, 0x000000, 0xFF0000, 0xFF0000, 0xFF0000, 0xFF0000, 0xDEB887,
    0x9966CC, 0x32CD32, 0xFFFF00, 0x32CD32, 0xFFFF00, 0xFF0000, 0xDEB887, 
    0xFF0000, 0x0000FF, 0x32CD32, 0x32CD32, 0x32CD32, 0x000000, 0x32CD32, 
    0x32CD32, 0xFF0000, 0x000000, 0xEE82EE, 0x32CD32, 0x111111, 0xFF0000, 
    0x000000
  },
  {
    0x00FF00, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x00FF00,
    0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 
    0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 
    0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 
    0x111111
  },
  {
    0xFF0000, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0xFF0000,
    0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 
    0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 
    0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 
    0x111111
  },
  {
    0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111,
    0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 
    0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 
    0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 
    0x111111
  },
  {
    0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111,
    0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 
    0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 
    0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 
    0x111111
  },
  {
    0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111,
    0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 
    0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 
    0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 
    0x111111
  },
  {
    0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111,
    0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 
    0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 
    0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 
    0x111111
  },
  {
    0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111,
    0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 
    0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 
    0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 0x111111, 
    0x111111
  }
};



uint8_t keyIDtoLedID(uint8_t keyID)
{
  uint8_t ledID[32] = 
  {
    7, 6, 5, 4, 3, 2, 1, 0, 14, 15, 16, 17, 8, 9, 10, 11, 23, 22, 21, 20, 19, 18, 13, 12, 255, 255, 255, 24, 25, 26, 27, 28 
  };

  return ledID[keyID-1];
};



uint8_t ledIDtoKeyID(uint8_t ledID)
{
  uint8_t keyID[32] = 
  {
    8, 7, 6, 5, 4, 3, 2, 1, 13, 14, 15, 16, 24, 23, 9, 10, 11, 12, 22, 21, 20, 19, 18, 17, 28, 29, 30, 31, 32
  };

  return keyID[ledID];
};



uint8_t keyIDtoHID(uint8_t keyID, uint8_t layer, uint8_t deviceID)
{
  if(keyID == 0)
  {
    return 0xFF;
  }

  //Serial.printf("KeyID: %u, LED ID: %u\r\n", keyID, keyIDtoLedID(keyID));
  return keyChar[deviceID][layer][keyIDtoLedID(keyID)];
};

#endif